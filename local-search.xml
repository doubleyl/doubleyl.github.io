<?xml version="1.0" encoding="utf-8"?>
<search>
  
  
  
  <entry>
    <title></title>
    <link href="/2023/03/04/git%E4%BD%BF%E7%94%A8/"/>
    <url>/2023/03/04/git%E4%BD%BF%E7%94%A8/</url>
    
    <content type="html"><![CDATA[<p>收藏夹里的小程序</p><h4 id="git-rebase换基"><a href="#git-rebase换基" class="headerlink" title="~git rebase换基"></a>~git rebase换基</h4><p>当前分支branch 从根到最新提交为 A-&gt;B-&gt;C-&gt;D</p><p>从A的另一个分支有新的提交</p><p>A-&gt;E-&gt;F</p><p>在当前分支用 git rebase anotherBranch</p><p>则复制BCD 删除branch，再以anotherBranch最新提交为根创建分支</p><p>最后:</p><p>branch: A-&gt;E-&gt;F-&gt;B-&gt;C-&gt;D</p><p>anotherBranch:A-&gt;E-&gt;F(即不会影响anotherBranch)</p><h4 id="git-cherry-pick-c1-c2-c3-c4"><a href="#git-cherry-pick-c1-c2-c3-c4" class="headerlink" title="~git cherry-pick c1 c2 c3 c4"></a>~git cherry-pick c1 c2 c3 c4</h4><p>将任意其他分支的提交c1 c2 c3 c4复制到当前分支</p><h4 id="git-merge-anotherBranch"><a href="#git-merge-anotherBranch" class="headerlink" title="~git merge anotherBranch"></a>~git merge anotherBranch</h4><p><strong>仍是不影anotherBranch,其最新提交位置不变</strong></p><p>只是在branch分支上调整，将anotherBranch上的提交与branch上最新的提交合并，产生一个新的提交加到branch上</p><h4 id="git-commit-–amend"><a href="#git-commit-–amend" class="headerlink" title="~git commit –amend"></a>~git commit –amend</h4><p>这次提交当作对最新提交的修改，只会使最新提交C2变为C2’ 而不会产生新的提交</p><p>可以通过git rebase -i HEAD~num 来调整分支，将要修改的C2调整到末端，修改后再用一次调整到适当位置</p><p>或 使用cherry-pick 先复制一个C2修改后再将其他的复制过来</p><h4 id="标签tag"><a href="#标签tag" class="headerlink" title="~标签tag"></a>~标签tag</h4><p>作为<strong>锚点</strong></p><p>git tag tagName c1(提交名,没有则为HEAD)</p><p>用于某个重要提交，这个提交较为稳定，一般不变</p><p><strong>git describe <ref></strong> </p><p>产生输出，描述离你最近的锚点 ref为能被git识别成提交记录的引用，不指定则为HEAD</p><p><tag>_ <numCommits>_ g<hash></p><p>tag 表示的是离 ref 最近的标签， numCommits是表示这个 ref与 tag相差有多少个提交记录， hash表示的是你所给定的 ref 所表示的提交记录哈希值的前几位。</p><h4 id="删除提交-git-reset-–hard-HEAD"><a href="#删除提交-git-reset-–hard-HEAD" class="headerlink" title="~删除提交 git reset –hard HEAD"></a>~删除提交 git reset –hard HEAD</h4><p>将返回到上次提交的状态</p><p>–mixed 默认</p><p>移动HEAD指针，改变暂存区，不变工作区</p><p>–soft 回退到某个版本</p><p>仅移动HEAD指针，不改变暂存区和工作区</p><p>–hard撤销提交和未提交的修改内容</p><p>暂存区和工作区都改变，变为上一次提交</p><h4 id="分离头模式"><a href="#分离头模式" class="headerlink" title="~分离头模式"></a>~分离头模式</h4><p>git checkout 目标不是分支而是具体的提交  提交名或引用则进入分离头模式，HEAD与分支分离</p><p>如果进行提交，不会更新分支，当切换到分支时这个提交难以找回</p><p><strong>一般情况下checkout branch 再分支下进行提交</strong></p>]]></content>
    
    
    
  </entry>
  
  
  
  <entry>
    <title></title>
    <link href="/2023/03/03/%E5%89%8D%E5%90%8E%E7%AB%AF%E5%BC%80%E5%8F%91%E5%AD%A6%E4%B9%A0/"/>
    <url>/2023/03/03/%E5%89%8D%E5%90%8E%E7%AB%AF%E5%BC%80%E5%8F%91%E5%AD%A6%E4%B9%A0/</url>
    
    <content type="html"><![CDATA[<h3 id="1-b站教程："><a href="#1-b站教程：" class="headerlink" title="1.b站教程："></a>1.b站教程：</h3><p><a href="https://www.bilibili.com/video/BV1U44y1W77D/?spm_id_from=333.337.search-card.all.click&vd_source=b71ddcbe3fe48732014fa85cfbf11f3c">从0开始带你手撸一套SpringBoot+Vue后台管理系统（2022年最新版）_哔哩哔哩_bilibili</a></p>]]></content>
    
    
    
  </entry>
  
  
  
  <entry>
    <title></title>
    <link href="/2023/03/03/blog%E4%BD%BF%E7%94%A8/"/>
    <url>/2023/03/03/blog%E4%BD%BF%E7%94%A8/</url>
    
    <content type="html"><![CDATA[<h3 id="1-官网指导："><a href="#1-官网指导：" class="headerlink" title="1.官网指导："></a>1.官网指导：</h3><p><a href="https://hexo.io/zh-cn/">Hexo</a></p><p>目标：学会配置页面，分类，标签，友链</p><p>主题：切换大图，文字，网站前图标</p><p>进阶：美化，阅读进度，书签等</p><p>新建页 hexo new page name</p><p>hexo g 生成静态文件</p><p>hexo -d 部署</p>]]></content>
    
    
    
  </entry>
  
  
  
  <entry>
    <title></title>
    <link href="/2023/03/03/web/"/>
    <url>/2023/03/03/web/</url>
    
    <content type="html"><![CDATA[<h3 id="通俗易懂解释："><a href="#通俗易懂解释：" class="headerlink" title="~通俗易懂解释："></a>~通俗易懂解释：</h3><p> <a href="https://zhuanlan.zhihu.com/p/134349361?utm_source=wechat_session">SSH 公钥 私钥的理解 - 知乎 (zhihu.com)</a></p><h4 id="发送方-接收方"><a href="#发送方-接收方" class="headerlink" title="~发送方 接收方"></a>~发送方 接收方</h4><p>接收方提供公匙，自己留私匙</p><p>别人想给自己发消息要用公匙加密</p><p>自己的私匙用于解密来的消息或进行签名</p><h4 id="可能的问题：被恶意替换公匙"><a href="#可能的问题：被恶意替换公匙" class="headerlink" title="~可能的问题：被恶意替换公匙"></a>~可能的问题：被恶意替换公匙</h4><p>A中存的B的公匙被C恶意替换为C的公匙，C就可以解密A用C的公匙加密的信息</p><h5 id="解决方案"><a href="#解决方案" class="headerlink" title="解决方案"></a>解决方案</h5><p>​<strong>“证书中心”（certificate authority，简称CA）</strong>用私匙加密 <strong>“数字证书”（Digital Certificate）</strong> (证书包含证书对象的身份信息，与证书对象的公匙绑定，他人无法修改，只能用公匙解读验证) A给B发信息时带上带上自己的数字证书(证书中心加密，只能解读不能修改)，B收到用证书中心公匙解密，进行验证(可以知道所用公匙是不是B的)</p><h4 id=""><a href="#" class="headerlink" title="~"></a>~</h4><p><strong>公钥登录</strong>：很多时候也说public key认证</p><p>​公钥登录的原理：首先用户将自己的公钥存储在需要登录的远程机器上面，然后登录的时候，远程主机会向用户发送一段随机字符串，接着用户使用自己的私钥加密字符串，并发给远程主机。最后，远程主机使用存储的公钥进行解密，若解密成功，则说明用户可信，准许登录，不在提示输入密码。</p><p>​（<strong>总结</strong>：即发送乱码，让对方用它的私匙加密发过来，再用对方的公匙解密，看与自己发送的是否一致–<strong>验证对方是否有正确的私匙</strong>）</p><h4 id="口令登录：即登录的时候需要输入登录密码。"><a href="#口令登录：即登录的时候需要输入登录密码。" class="headerlink" title="口令登录：即登录的时候需要输入登录密码。"></a>口令登录：即登录的时候需要输入登录密码。</h4><p>1.客户端向服务器发出请求</p><p>2.服务器将自己的公钥返回给客户端;</p><p>3.客户端用服务器的公钥加密登录信息, 再将信息发送给服务器;</p><p>4.服务器接收到客户端传送的登录信息, 用自己的私钥解码, 如果结果正确, 则同意登录, 建立起连接。</p><p><strong>备注：</strong></p><p>1、服务端会将客户端发的公钥写入到~&#x2F;.ssh&#x2F;authorized_keys 文件末尾。</p><p>2、公钥和私钥在客户端（登录端）生成</p><h4 id="可能供参考的视频：八、hexo主题预览-哔哩哔哩-bilibili"><a href="#可能供参考的视频：八、hexo主题预览-哔哩哔哩-bilibili" class="headerlink" title="~可能供参考的视频：八、hexo主题预览_哔哩哔哩_bilibili"></a>~可能供参考的视频：<a href="https://www.bilibili.com/video/BV1cW411A7Jx?p=8&vd_source=b71ddcbe3fe48732014fa85cfbf11f3c">八、hexo主题预览_哔哩哔哩_bilibili</a></h4>]]></content>
    
    
    
  </entry>
  
  
  
  <entry>
    <title>Hello World</title>
    <link href="/2023/03/03/hello-world/"/>
    <url>/2023/03/03/hello-world/</url>
    
    <content type="html"><![CDATA[<p>Welcome to <a href="https://hexo.io/">Hexo</a>! This is your very first post. Check <a href="https://hexo.io/docs/">documentation</a> for more info. If you get any problems when using Hexo, you can find the answer in <a href="https://hexo.io/docs/troubleshooting.html">troubleshooting</a> or you can ask me on <a href="https://github.com/hexojs/hexo/issues">GitHub</a>.</p><h3 id="test"><a href="#test" class="headerlink" title="test"></a>test</h3><h2 id="Quick-Start"><a href="#Quick-Start" class="headerlink" title="Quick Start"></a>Quick Start</h2><h3 id="Create-a-new-post"><a href="#Create-a-new-post" class="headerlink" title="Create a new post"></a>Create a new post</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo new <span class="string">&quot;My New Post&quot;</span></span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/writing.html">Writing</a></p><h3 id="Run-server"><a href="#Run-server" class="headerlink" title="Run server"></a>Run server</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo server</span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/server.html">Server</a></p><h3 id="Generate-static-files"><a href="#Generate-static-files" class="headerlink" title="Generate static files"></a>Generate static files</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo generate</span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/generating.html">Generating</a></p><h3 id="Deploy-to-remote-sites"><a href="#Deploy-to-remote-sites" class="headerlink" title="Deploy to remote sites"></a>Deploy to remote sites</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo deploy</span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/one-command-deployment.html">Deployment</a></p>]]></content>
    
    
    
  </entry>
  
  
  
  
</search>
